<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hello.member.dao.impl.MemberDaoImpl">

    <resultMap type="com.hello.member.vo.MembersVO" 
               id="MembersVOMap" 
               autoMapping="true">
        <id column="EMAIL" property="email"/>
        <collection property="actionList" ofType="com.hello.member.vo.ActionVO">
            <result column="ACTION_ID" property="actionId" />
        </collection>
    </resultMap>
    
    <insert id="insertNewMember" 
            parameterType="com.hello.member.vo.MemberRegistRequestVO">
        INSERT INTO MEMBERS
		 (EMAIL
		, NAME
		, PASSWORD
		, SALT
		, JOIN_DATE
		, LATEST_LOGIN_IP
		, LATEST_PASSWORD_CHANGE_DATE
		, LATEST_LOGIN_DATE
		, LATEST_LOGIN_FAIL_DATE
		, LOGIN_FAIL_COUNT
		, LOGIN_YN
		, BLOCK_YN)
		VALUES
		 (#{email}
		, #{name}
		, #{password}
		, #{salt}
		, SYSDATE
		, NULL
		, SYSDATE
		, NULL
		, NULL
		, 0 
		, 'N'
		, 'N')
    </insert>
    
    <select id="selectMemberCountBy"
            parameterType="string"
            resultType="_int">
        SELECT COUNT(EMAIL)
		  FROM MEMBERS
		 WHERE EMAIL = #{_parameter}
    </select>
    
    <select id="selectOneMemberBy"
            parameterType="string"
            resultMap="MembersVOMap">
        SELECT M.EMAIL
		     , M.NAME
		     , M.PASSWORD
		     , M.SALT
		     , M.JOIN_DATE
		     , M.LATEST_LOGIN_IP
		     , M.LATEST_PASSWORD_CHANGE_DATE
		     , M.LATEST_LOGIN_DATE
		     , M.LATEST_LOGIN_FAIL_DATE
		     , M.LOGIN_FAIL_COUNT
		     , M.LOGIN_YN
		     , M.BLOCK_YN
		     , M.ROLE
		     , MA.ACTION_ID
		  FROM MEMBERS M
		 INNER JOIN MEMBERS_ACTION MA
		    ON M.EMAIL = MA.EMAIL
		 WHERE M.EMAIL = #{_parameter}
    </select>
    
    <update id="updateLoginFailCount"
            parameterType="string">
        UPDATE MEMBERS
		   SET LATEST_LOGIN_FAIL_DATE = SYSDATE
		     , LOGIN_FAIL_COUNT = LOGIN_FAIL_COUNT + 1
		 WHERE EMAIL = #{_parameter}
    </update>
            
    <update id="updateBlock"
            parameterType="string">
        UPDATE MEMBERS
		   SET BLOCK_YN = 'Y'
		 WHERE EMAIL = #{_parameter}
		   AND LOGIN_FAIL_COUNT >= 5
    </update>
            
    <update id="updateLoginSuccess"
            parameterType="string">
        UPDATE MEMBERS
		   SET LOGIN_FAIL_COUNT = 0
		     , LATEST_LOGIN_DATE = SYSDATE
		     , LATEST_LOGIN_IP = NULL
		     , LOGIN_YN = 'Y'
		 WHERE EMAIL = #{_parameter}
    </update>
    
    <update id="updateLogoutStatus"
            parameterType="string">
        UPDATE MEMBERS
           SET LOGIN_YN = 'N'
         WHERE EMAIL = #{_parameter}
    </update>
    
    <delete id="deleteOneMemberBy"
            parameterType="string">
        DELETE 
		  FROM MEMBERS
		 WHERE EMAIL = #{_parameter}
    </delete>
    
    <insert id="insertActions"
            parameterType="com.hello.member.vo.MembersVO">
            INSERT INTO MEMBERS_ACTION
            SELECT #{email}
                  , ACTION_ID
              FROM ACTION
             <if test='role == "ROLE_USER"'>
             WHERE ACTION_ID NOT IN ('BOARD_DELETE','REPLY_DELETE')
             </if>
    </insert>
    
</mapper>



















